generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comment {
  id         Int      @id @default(autoincrement())
  content    String   @db.Text
  author_id  Int
  post_id    Int
  created_at DateTime @db.DateTime(0)
  user       user     @relation(fields: [author_id], references: [id], onDelete: Cascade, map: "comment_ibfk_1")
  post       post     @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_ibfk_2")

  @@index([author_id], map: "comment_author_id_index")
  @@index([post_id], map: "comment_post_id_index")
}

model like {
  id        Int  @id @default(autoincrement())
  author_id Int
  target_id Int
  user      user @relation(fields: [author_id], references: [id], onDelete: Cascade, map: "like_ibfk_1")
  post      post @relation(fields: [target_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "like_ibfk_2")

  @@index([author_id], map: "like_author_id_index")
  @@index([target_id], map: "like_target_id_index")
}

model post {
  id             Int       @id @default(autoincrement())
  content        String    @db.Text
  author_id      Int
  created_at     DateTime  @db.DateTime(0)
  likes_count    Int?
  comments_count Int?
  img_url        Int?
  user           user      @relation(fields: [author_id], references: [id], map: "post_ibfk_1")
  comment        comment[]
  like           like[]

  @@index([author_id], map: "post_author_id_index")
}

model user {
  id        Int       @id @default(autoincrement())
  full_name String    @db.VarChar(255)
  email     String    @unique(map: "email") @db.VarChar(255)
  password  String    @db.VarChar(255)
  role      user_role @default(USER)
  img_url   String?   @db.VarChar(255)
  comment   comment[]
  like      like[]
  post      post[]
}

enum user_role {
  USER
  ADMIN
}
